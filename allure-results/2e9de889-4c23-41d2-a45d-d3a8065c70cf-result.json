{"name": "test_max_results_invalid_above_range", "status": "skipped", "statusDetails": {"message": "XFAIL Docs say max_results <= 20, backend accepts >20 (up to 100)\n\nFailed: DID NOT RAISE <class 'tavily.errors.BadRequestError'>", "trace": "@pytest.mark.negative\n    @pytest.mark.xfail(reason=\"Docs say max_results <= 20, backend accepts >20 (up to 100)\", strict=False)\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_max_results_invalid_above_range():\n        payload = {\n            \"query\": \"Cristiano Ronaldo\",\n            \"max_results\": 21\n        }\n>       assert_tavily_exception_error(payload,exception_messages[\"invalidMaxResults\"],BadRequestError)\n\ntest_tavily_api.py:364: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npayload = {'max_results': 21, 'query': 'Cristiano Ronaldo'}, expected_error_msg = 'Invalid max results.', exception_name = <class 'tavily.errors.BadRequestError'>\n\n    def assert_tavily_exception_error(payload, expected_error_msg,exception_name: Type[BaseException] = BadRequestError):\n>           with pytest.raises(exception_name) as exc:\nE           Failed: DID NOT RAISE <class 'tavily.errors.BadRequestError'>\n\ntest_tavily_api.py:701: Failed"}, "start": 1754785394458, "stop": 1754785396957, "uuid": "a4d093dd-3e69-424d-ace5-f21d81d41204", "historyId": "69487ece48782240dd1558f9ded48868", "testCaseId": "69487ece48782240dd1558f9ded48868", "fullName": "test_tavily_api#test_max_results_invalid_above_range", "labels": [{"name": "epic", "value": "Tavily Search API"}, {"name": "severity", "value": "critical"}, {"name": "tag", "value": "@pytest.mark.xfail(reason='Docs say max_results <= 20, backend accepts >20 (up to 100)', strict=False)"}, {"name": "tag", "value": "negative"}, {"name": "suite", "value": "test_tavily_api"}, {"name": "host", "value": "DESKTOP-FTL2TTS"}, {"name": "thread", "value": "16220-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_tavily_api"}], "links": [{"type": "link", "url": "https://docs.tavily.com/documentation/api-reference/endpoint/search", "name": "API Reference"}]}